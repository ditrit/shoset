# This file is to use with TrafficTroll to limit the bandwidth of an application. see the guide.md and the fileSynchronisation.md for more informations.



# The rate limits for the specified interface. Specifying these values is useful for two
# things: 1) you want to limit the used bandwidth for the entire interface or 2) you
# want to make use of traffic prioritization.

# If you want to 1) limit the used bandwidth for the entire interface, simply specify
# values below your actual speed: the traffic will be shaped in such a way, that it does
# not exceed the specified numbers.

# If you want to 2) make use of the traffic prioritization feature, these values must be
# as close as possible to your real speed: if they are too low, traffic prioritization
# will work, but you are losing part of your bandwidth; if they are too high, traffic
# prioritization won't work as well as it could. I recommend you use some internet speed
# test you can find online to get an approximation for the correct values.

# If you don't want to do 1) or 2), you can omit these values. Bandwidth limiting per
# application will still work, just traffic prioritization won't work as well or
# entirely.
#download: 5mbps
#upload: 1mbps

# Guaranteed download and upload rates for all global traffic that is not shaped as part
# of a matched process by TrafficToll. The idea here is to leave enough "guaranteed"
# bandwidth to all applications not defined in "processes", so that they are not starved
# to a bandwidth, by processes with higher priority, that would cause the other IP to
# drop the connection. These are the default values, if omitted. Keep in mind that this
# doesn't reserve the bandwidth -- if this traffic is not made use of, it's available
# to processes with higher priority.
#download-minimum: 100kbps
#upload-minimum: 10kbps

# The global download and upload priority. This will be the priority for traffic that is
# not created by any of the processes. By default it will always be the lowest priority
# if any of the processes specify a download or upload priority explicitly, otherwise
# all traffic will have the same priority.
#download-priority: 0
#upload-priority: 0


# A list of processes you want to match and their respective settings
processes:
  # You can name the process what you want, it is only used to identify it on the CLI
  # output
  Test1:
    # Adjust the traffic priority to 0 (highest possible, higher integers mean _lower_
    # priority) to prevent lag and high pings.
    #download-priority: 0
    #upload-priority: 0

    # Download and upload rate limits can be entirely omitted if you don't want to apply
    # any, in this case traffic will only be prioritized like specified.
    download: 1024kbps
    upload: 1024kbps

    # The match section. A process is selected when all predicates in the match section
    # match. Every attribute psutil.Process
    # (https://psutil.readthedocs.io/en/latest/index.html#psutil.Process) provides on
    # Linux can be matched on, using regular expressions. Integer attributes will be
    # treated as strings and list attributes will be joined using shlex.join() before
    # matching. If you want to, you can also specify a regular expression with an OR
    # operator and match many processes which will all share the specified bandwidth
    # limit or traffic priority.
    # If you do not see a line starting with "Shaping traffic for..." with your process
    # name in it, while it is clearly causing traffic, your match section is failing.
    # Please make sure it works correctly.
    match:
      - name: test


